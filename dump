'''
Created By Shreyas Hukkeri
Printed Saturday, January 21, 2018
'''

        self.l2_1 = self.track_layer(tf.layers.Conv2D(16, 5, padding="SAME", activation=tf.nn.leaky_relu))
        self.l2_2 = self.track_layer(tf.layers.Conv2D(16, 5, padding="SAME", activation=tf.nn.leaky_relu))
        self.l2_3 = self.track_layer(tf.layers.Conv2D(16, 5, padding="SAME", activation=tf.nn.leaky_relu))
        self.l2_5 = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME"))

        self.l1_1 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_2 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_3 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_4 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_5 = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME"))

        self.l1_1 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_2 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_3 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_4 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_5 = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME"))

        self.l1_1 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_2 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_3 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_4 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", activation=tf.nn.leaky_relu))
        self.l1_5 = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME"))


        self.l1_4 = self.track_layer(tf.layers.Conv2D(64, 3, strides=2, padding="SAME", name="Conv_1_4",
                                                      activation=tf.nn.leaky_relu))
        self.l1_5 = self.track_layer(tf.layers.Conv2D(8, 3, padding="SAME", name="Conv_1_5",
                                                      activation=tf.nn.leaky_relu))
        self.l1_6 = self.track_layer(tf.layers.Conv2D(8, 3, padding="SAME", name="Conv_1_6",
                                                      activation=tf.nn.leaky_relu))
        self.l1_mp = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME", name="MaxPool_1"))

        self.l2_1 = self.track_layer(tf.layers.Conv2D(16, 1, strides=2, padding="SAME", name="Conv_2_1",
                                                      activation=tf.nn.leaky_relu))
        self.l2_2 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", name="Conv_2_2",
                                                      activation=tf.nn.leaky_relu))
        self.l2_3 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", name="Conv_2_3",
                                                      activation=tf.nn.leaky_relu))
        self.l2_4 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", name="Conv_2_4",
                                                      activation=tf.nn.leaky_relu))
        self.l2_5 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", name="Conv_2_5",
                                                      activation=tf.nn.leaky_relu))
        self.l2_6 = self.track_layer(tf.layers.Conv2D(16, 3, padding="SAME", name="Conv_2_6",
                                                      activation=tf.nn.leaky_relu))
        self.l2_mp = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME", name="MaxPool_2"))

        self.l3_1 = self.track_layer(tf.layers.Conv2D(32, 1, strides=2, padding="SAME", name="Conv_3_1",
                                                      activation=tf.nn.leaky_relu))
        self.l3_2 = self.track_layer(tf.layers.Conv2D(32, 3, padding="SAME", name="Conv_3_2",
                                                      activation=tf.nn.leaky_relu))
        self.l3_3 = self.track_layer(tf.layers.Conv2D(32, 3, padding="SAME", name="Conv_3_3",
                                                      activation=tf.nn.leaky_relu))
        self.l3_4 = self.track_layer(tf.layers.Conv2D(32, 3, padding="SAME", name="Conv_3_4",
                                                      activation=tf.nn.leaky_relu))
        self.l3_5 = self.track_layer(tf.layers.Conv2D(32, 3, padding="SAME", name="Conv_3_5",
                                                      activation=tf.nn.leaky_relu))
        self.l3_6 = self.track_layer(tf.layers.Conv2D(32, 3, padding="SAME", name="Conv_3_6",
                                                      activation=tf.nn.leaky_relu))
        self.l3_mp = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME", name="MaxPool_3"))

        self.l4_1 = self.track_layer(tf.layers.Conv2D(64, 1, strides=2, padding="SAME", name="Conv_4_1",
                                                      activation=tf.nn.leaky_relu))
        self.l4_2 = self.track_layer(tf.layers.Conv2D(64, 3, padding="SAME", name="Conv_4_2",
                                                      activation=tf.nn.leaky_relu))
        self.l4_3 = self.track_layer(tf.layers.Conv2D(64, 3, padding="SAME", name="Conv_4_3",
                                                      activation=tf.nn.leaky_relu))
        self.l4_4 = self.track_layer(tf.layers.Conv2D(64, 3, padding="SAME", name="Conv_4_4",
                                                      activation=tf.nn.leaky_relu))
        self.l4_5 = self.track_layer(tf.layers.Conv2D(64, 3, padding="SAME", name="Conv_4_5",
                                                      activation=tf.nn.leaky_relu))
        self.l4_6 = self.track_layer(tf.layers.Conv2D(64, 3, padding="SAME", name="Conv_4_6",
                                                      activation=tf.nn.leaky_relu))
        self.l4_mp = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME", name="MaxPool_4"))

        self.l5_1 = self.track_layer(tf.layers.Conv2D(128, 1, strides=2, padding="SAME", name="Conv_5_1",
                                                      activation=tf.nn.leaky_relu))
        self.l5_2 = self.track_layer(tf.layers.Conv2D(128, 3, padding="SAME", name="Conv_5_2",
                                                      activation=tf.nn.leaky_relu))
        self.l5_3 = self.track_layer(tf.layers.Conv2D(128, 3, padding="SAME", name="Conv_5_3",
                                                      activation=tf.nn.leaky_relu))
        self.l5_4 = self.track_layer(tf.layers.Conv2D(128, 3, padding="SAME", name="Conv_5_4",
                                                      activation=tf.nn.leaky_relu))
        self.l5_5 = self.track_layer(tf.layers.Conv2D(128, 3, padding="SAME", name="Conv_5_5",
                                                      activation=tf.nn.leaky_relu))
        self.l5_6 = self.track_layer(tf.layers.Conv2D(128, 3, padding="SAME", name="Conv_5_6",
                                                      activation=tf.nn.leaky_relu))
        self.l5_mp = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME", name="MaxPool_5"))

        self.l6_1 = self.track_layer(tf.layers.Conv2D(256, 1, strides=2, padding="SAME", name="Conv_6_1",
                                                      activation=tf.nn.leaky_relu))
        self.l6_2 = self.track_layer(tf.layers.Conv2D(256, 3, padding="SAME", name="Conv_6_2",
                                                      activation=tf.nn.leaky_relu))
        self.l6_3 = self.track_layer(tf.layers.Conv2D(256, 3, padding="SAME", name="Conv_6_3",
                                                      activation=tf.nn.leaky_relu))
        self.l6_4 = self.track_layer(tf.layers.Conv2D(256, 3, padding="SAME", name="Conv_6_4",
                                                      activation=tf.nn.leaky_relu))
        self.l6_5 = self.track_layer(tf.layers.Conv2D(256, 3, padding="SAME", name="Conv_6_5",
                                                      activation=tf.nn.leaky_relu))
        self.l6_6 = self.track_layer(tf.layers.Conv2D(256, 3, padding="SAME", name="Conv_6_6",
                                                      activation=tf.nn.leaky_relu))
        self.l6_mp = self.track_layer(tf.layers.MaxPooling2D(3, 2, padding="SAME", name="MaxPool_6"))


        self.fc1 = self.track_layer(tf.layers.Dense(units=256))

        , conv3, conv4, conv5, conv6, conv8, conv9, conv10,
                                     conv11, conv12, conv13, conv14, conv15, conv16, conv17, conv